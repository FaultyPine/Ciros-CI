name: Ciros-AutoBuild

on:
  workflow_dispatch:
    inputs:
      commit-info:
        default: "No commit info"
        description: "Commit info in discord msg"


permissions:
  contents: write
  
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      # Checkout
      #- name: Checkout repository
      #  uses: actions/checkout@v2
      #  with:
      #    lfs: true
      - name: display inputs
        run: |
          echo '${{ toJSON(github.event.inputs) }}'
          echo '${{ github.ref }}'
      - name: Setup SSH
        uses: MrSquaare/ssh-setup-action@v1
        with:
          host: gitlab.com
          private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Free Up GitHub Actions Ubuntu Runner Disk Space
        uses: jlumbroso/free-disk-space@main
        with:
          # This might remove tools that are actually needed, if set to "true" but frees about 6 GB
          tool-cache: true

          # All of these default to true, but feel free to set to "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true
      
      - name: clone repo
        run: git clone git@gitlab.com:jmchurch/conqueringciros.git
      - name: show repo folder structure
        run: find . -type d | sed -e "s/[^-][^\/]*\//  |/g" -e "s/|\([^ ]\)/| - \1/"

      # Cache
      #- uses: actions/cache@v2
      #  with:
      #    path: Library
      #    key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
      #    restore-keys: |
      #      Library-

      # Test
      #- name: Run tests
      #  uses: game-ci/unity-test-runner@v2
      #  env:
      #    UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      #  with:
      #    githubToken: ${{ secrets.GITHUB_TOKEN }}


      # Build
      - name: Build project
        uses: game-ci/unity-builder@v2
        id: buildstep
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: StandaloneWindows
          projectPath: conqueringciros/ConqueringCiros
          versioning: None
      
      #- name: Build project (test)
      #  run: |
      #    mkdir build
      #    cd build
      #    touch build_contents.txt
      #    cd ..

      # Output
      #- uses: actions/upload-artifact@v2
      #  with:
      #    name: Build
      #    path: build
          
      - name: Zip build
        run: |
            zip -r Build.zip build
            ls
          
 #     - name: Release
 #       id: releasestep
 #       uses: softprops/action-gh-release@v1
 #      with:
 #         files: Build.zip
 #         tag_name: "AutoBuild-${{ github.sha }}"

      - name: Create Release
        id: releasestep
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: AutoBuild-${{ github.run_id }}-${{ github.run_attempt }}
          release_name: Release ${{ github.run_id }}-${{ github.run_attempt }}
          body: Autobuild
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.releasestep.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./Build.zip
          asset_name: Build.zip
          asset_content_type: application/zip
          
      - name: Discord post   
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          title: "New build is ready!"
          description: |
            `${{ github.event.inputs.commit-info }}`
            Download build [here](${{ steps.releasestep.outputs.html_url }})
          nodetail: true
